[{"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/index.js":"1","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/App.js":"2","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Navbar/index.js":"3","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Navbar/UpperNavbar/index.js":"4","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Navbar/BottomNavbar/index.js":"5","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Footer/index.js":"6","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Footer/UpperFooter/index.js":"7","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Footer/BottomFooter/index.js":"8","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/store.js":"9","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/reducers/productReducers.js":"10","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/consts/productConsts.js":"11","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Home/index.js":"12","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/actions/productActions.js":"13","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Message/index.js":"14","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/reducers/userReducers.js":"15","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/consts/userConsts.js":"16","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Login/index.js":"17","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/actions/userActions.js":"18","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Register/index.js":"19","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/UserProfile/index.js":"20","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/ProductDetails/index.js":"21","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/reducers/cartReducers.js":"22","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/consts/cartConsts.js":"23","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Cart/index.js":"24","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/actions/cartActions.js":"25","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/reducers/orderReducers.js":"26","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/consts/orderConsts.js":"27","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Shipping/index.js":"28","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/CheckoutSteps/index.js":"29","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Payment/index.js":"30","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/PlaceOrder/index.js":"31","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/actions/orderActions.js":"32","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Order/index.js":"33","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Slider/index.js":"34","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/UserList/index.js":"35","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/UserEdit/index.js":"36","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/ProductList/index.js":"37","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/ProductEdit/index.js":"38"},{"size":270,"mtime":1611419841655,"results":"39","hashOfConfig":"40"},{"size":1659,"mtime":1612628366700,"results":"41","hashOfConfig":"40"},{"size":262,"mtime":1611411991614,"results":"42","hashOfConfig":"40"},{"size":1837,"mtime":1611410927166,"results":"43","hashOfConfig":"40"},{"size":3980,"mtime":1612626555271,"results":"44","hashOfConfig":"40"},{"size":262,"mtime":1611413931710,"results":"45","hashOfConfig":"40"},{"size":3814,"mtime":1611413694981,"results":"46","hashOfConfig":"40"},{"size":591,"mtime":1611413773057,"results":"47","hashOfConfig":"40"},{"size":1771,"mtime":1612629542644,"results":"48","hashOfConfig":"40"},{"size":3625,"mtime":1612358218775,"results":"49","hashOfConfig":"40"},{"size":1520,"mtime":1612354338472,"results":"50","hashOfConfig":"40"},{"size":3113,"mtime":1612204347491,"results":"51","hashOfConfig":"40"},{"size":5393,"mtime":1612357739275,"results":"52","hashOfConfig":"40"},{"size":251,"mtime":1611423046967,"results":"53","hashOfConfig":"40"},{"size":3483,"mtime":1612358374270,"results":"54","hashOfConfig":"40"},{"size":1512,"mtime":1612354279180,"results":"55","hashOfConfig":"40"},{"size":2792,"mtime":1612206988696,"results":"56","hashOfConfig":"40"},{"size":6359,"mtime":1612355026213,"results":"57","hashOfConfig":"40"},{"size":3058,"mtime":1612207466851,"results":"58","hashOfConfig":"40"},{"size":6787,"mtime":1612208891124,"results":"59","hashOfConfig":"40"},{"size":3080,"mtime":1612631395523,"results":"60","hashOfConfig":"40"},{"size":1242,"mtime":1611950522939,"results":"61","hashOfConfig":"40"},{"size":284,"mtime":1611845466307,"results":"62","hashOfConfig":"40"},{"size":5031,"mtime":1612208297440,"results":"63","hashOfConfig":"40"},{"size":1214,"mtime":1611853393391,"results":"64","hashOfConfig":"40"},{"size":3357,"mtime":1611947975819,"results":"65","hashOfConfig":"40"},{"size":1259,"mtime":1611947835919,"results":"66","hashOfConfig":"40"},{"size":4659,"mtime":1612208995758,"results":"67","hashOfConfig":"40"},{"size":1249,"mtime":1611948735910,"results":"68","hashOfConfig":"40"},{"size":2722,"mtime":1612210340328,"results":"69","hashOfConfig":"40"},{"size":5507,"mtime":1612211010921,"results":"70","hashOfConfig":"40"},{"size":5551,"mtime":1612106321972,"results":"71","hashOfConfig":"40"},{"size":8578,"mtime":1612211251524,"results":"72","hashOfConfig":"40"},{"size":4119,"mtime":1612204232837,"results":"73","hashOfConfig":"40"},{"size":3400,"mtime":1612446448178,"results":"74","hashOfConfig":"40"},{"size":3172,"mtime":1612452218556,"results":"75","hashOfConfig":"40"},{"size":4498,"mtime":1612626837898,"results":"76","hashOfConfig":"40"},{"size":5734,"mtime":1612631404373,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"yv2m0e",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"80"},"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/index.js",[],["167","168"],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/App.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Navbar/index.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Navbar/UpperNavbar/index.js",[],["169","170"],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Navbar/BottomNavbar/index.js",["171"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"./../../../redux/actions/userActions\";\n\nconst BottomNavbar = () => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n  return (\n    <div className=\"header-bottom\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            <div className=\"logo pull-left\">\n              <Link to=\"/\">\n                <img src=\"images/logo.png\" alt=\"\" />\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"col-sm-8\">\n            <div className=\"navbar-header\">\n              <button\n                type=\"button\"\n                className=\"navbar-toggle\"\n                data-toggle=\"collapse\"\n                data-target=\".navbar-collapse\"\n              >\n                <span className=\"sr-only\">Toggle navigation</span>\n                <span className=\"icon-bar\"></span>\n                <span className=\"icon-bar\"></span>\n                <span className=\"icon-bar\"></span>\n              </button>\n            </div>\n            <div className=\"mainmenu pull-right\">\n              <ul\n                className=\"nav navbar-nav collapse navbar-collapse\"\n                style={{ marginTop: \"15px\" }}\n              >\n                {userInfo ? (\n                  <>\n                    <li>\n                      <Link to=\"/profile\">\n                        <i\n                          className=\"fa fa-user\"\n                          style={{ paddingLeft: \"15px\" }}\n                        ></i>{\" \"}\n                        Account\n                      </Link>\n                    </li>\n                    <li>\n                      <a href=\"checkout.html\">\n                        <i className=\"fa fa-crosshairs\"></i> Checkout\n                      </a>\n                    </li>\n                    <li>\n                      <Link to=\"/cart\">\n                        <i className=\"fa fa-shopping-cart\"></i> Cart\n                      </Link>\n                    </li>\n                    <li>\n                      <Link to=\"/\" onClick={logoutHandler}>\n                        <i\n                          className=\"fa fa-user\"\n                          style={{ paddingLeft: \"15px\" }}\n                        ></i>{\" \"}\n                        Logout\n                      </Link>\n                    </li>\n                  </>\n                ) : (\n                  <>\n                    <li>\n                      <Link to=\"/cart\">\n                        <i className=\"fa fa-shopping-cart\"></i> Cart\n                      </Link>\n                    </li>\n                    <li>\n                      <Link to=\"/register\">\n                        <i className=\"fa fa-info\"></i> Register\n                      </Link>\n                    </li>\n                    <li>\n                      <Link to=\"/login\">\n                        <i className=\"fa fa-lock\"></i> Login\n                      </Link>\n                    </li>\n                  </>\n                )}{\" \"}\n                {userInfo && userInfo.isAdmin && (\n                  <li className=\"dropdown\">\n                    <a href=\"#\">\n                      Dashboard<i className=\"fa fa-angle-down\"></i>\n                    </a>\n                    <ul role=\"menu\" className=\"sub-menu\">\n                      <li>\n                        <Link to=\"/admin/userlist\">Users</Link>\n                      </li>\n                      <li>\n                        <Link to=\"/admin/productlist\">Products</Link>\n                      </li>\n                    </ul>\n                  </li>\n                )}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BottomNavbar;\n","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Footer/index.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Footer/UpperFooter/index.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Footer/BottomFooter/index.js",["172"],"import React from \"react\";\n\nconst BottomFooter = () => {\n  return (\n    <div className=\"footer-bottom\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <p className=\"pull-left\">\n            Copyright © 2021 M Store. All rights reserved.\n          </p>\n          <p className=\"pull-right\">\n            Developed By{\" \"}\n            <span>\n              <a target=\"_blank\" href=\"http://www.themeum.com\">\n                Muhammad Gamal\n              </a>\n            </span>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BottomFooter;\n","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/store.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/reducers/productReducers.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/consts/productConsts.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Home/index.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/actions/productActions.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Message/index.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/reducers/userReducers.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/consts/userConsts.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Login/index.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/actions/userActions.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Register/index.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/UserProfile/index.js",["173"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport {\n  getUserDetails,\n  updateUserProfile,\n} from \"./../../redux/actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from \"./../../redux/consts/userConsts\";\nimport Message from \"../../components/Message\";\nimport { listMyOrders } from \"../../redux/actions/orderActions\";\nimport { Table, Button, Col } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst UserProfile = ({ history, location }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <section id=\"form\" style={{ backgroundColor: \"#f4f4f4\", margin: \"40px 0\" }}>\n      <div className=\"container\">\n        <div className=\"row\">\n          {message && <Message variant=\"alert alert-danger\">{message}</Message>}\n          {loading ? (\n            <Loader\n              type=\"Puff\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n              timeout={3000} //3 secs\n            />\n          ) : error ? (\n            <Message variant=\"alert alert-danger\">{error}</Message>\n          ) : (\n            <>\n              <div\n                className=\"col-sm-6\"\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  height: \"500px\",\n                }}\n              >\n                <div\n                  className=\"login-form\"\n                  style={{ height: \"50%\", width: \"80%\" }}\n                >\n                  <h2>Update your information</h2>\n                  <form onSubmit={submitHandler}>\n                    <input\n                      type=\"name\"\n                      placeholder=\"Name\"\n                      onChange={(e) => setName(e.target.value)}\n                      value={name}\n                    />\n                    <input\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      onChange={(e) => setEmail(e.target.value)}\n                      value={email}\n                    />\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      onChange={(e) => setPassword(e.target.value)}\n                      value={password}\n                    />\n\n                    <input\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      value={confirmPassword}\n                    />\n                    <button type=\"submit\" className=\"btn btn-default\">\n                      Update\n                    </button>\n                  </form>\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                  <Loader\n                    type=\"Puff\"\n                    color=\"#00BFFF\"\n                    height={100}\n                    width={100}\n                    timeout={3000} //3 secs\n                  />\n                ) : errorOrders ? (\n                  <Message variant=\"danger\">{errorOrders}</Message>\n                ) : (\n                  <Table striped bordered hover responsive className=\"table-sm\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>DATE</th>\n                        <th>TOTAL</th>\n                        <th>PAID</th>\n                        <th>DELIVERED</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {orders.map((order) => (\n                        <tr key={order._id}>\n                          <td>{order._id}</td>\n                          <td>{order.createdAt.substring(0, 10)}</td>\n                          <td>{order.totalPrice}</td>\n                          <td>\n                            {order.isPaid ? (\n                              order.paidAt.substring(0, 10)\n                            ) : (\n                              <i\n                                className=\"fas fa-times\"\n                                style={{ color: \"red\" }}\n                              ></i>\n                            )}\n                          </td>\n                          <td>\n                            {order.isDelivered ? (\n                              order.deliveredAt.substring(0, 10)\n                            ) : (\n                              <i\n                                className=\"fas fa-times\"\n                                style={{ color: \"red\" }}\n                              ></i>\n                            )}\n                          </td>\n                          <td>\n                            <LinkContainer to={`/order/${order._id}`}>\n                              <Button className=\"btn-sm\" variant=\"light\">\n                                Details\n                              </Button>\n                            </LinkContainer>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                )}\n              </div>\n            </>\n          )}{\" \"}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default UserProfile;\n","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/ProductDetails/index.js",["174","175"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProductDetails } from \"./../../redux/actions/productActions\";\nimport Loader from \"react-loader-spinner\";\nimport Message from \"./../../components/Message\";\n\nconst ProductDetails = ({ match, history }) => {\n  const [qty, setQty] = useState(1);\n\n  const dispatch = useDispatch();\n  const productDetails = useSelector((state) => state.productDetails);\n\n  const { product, error, loading } = productDetails;\n\n  useEffect(() => {\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(getProductDetails(match.params.id));\n    }\n  }, [dispatch, match]);\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n  return (\n    <div className=\"col-sm-12\">\n      <div className=\"product-details\">\n        {loading ? (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        ) : error ? (\n          <Message variant=\"alert alert-danger\">{error}</Message>\n        ) : (\n          <>\n            <div className=\"col-sm-5\">\n              <div className=\"view-product\">\n                <img src={product.image} alt=\"\" />\n              </div>\n            </div>\n            <div className=\"col-sm-7\">\n              <div className=\"product-information\">\n                <img\n                  src=\"images/product-details/new.jpg\"\n                  className=\"newarrival\"\n                  alt=\"\"\n                />\n                <h2>{product.name}</h2>\n                <p>Web ID: {product._id}</p>\n                <img src=\"images/product-details/rating.png\" alt=\"\" />\n                <span>\n                  <span>US {product.price}</span>\n                  <label>Quantity:</label>\n                  <input\n                    type=\"text\"\n                    value={qty}\n                    onChange={(e) => setQty(e.target.value)}\n                    max={product.countInStock}\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-fefault cart\"\n                    disabled={product.countInStock === 0}\n                    onClick={addToCartHandler}\n                  >\n                    <i className=\"fa fa-shopping-cart\"></i>\n                    Add to cart\n                  </button>\n                </span>\n                <p>\n                  <b>Availability:</b>{\" \"}\n                  {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n                </p>\n\n                <p>\n                  <b>Brand:</b> {product.brand}\n                </p>\n                <a href=\"\">\n                  <img\n                    src=\"images/product-details/share.png\"\n                    className=\"share img-responsive\"\n                    alt=\"\"\n                  />\n                </a>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductDetails;\n","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/reducers/cartReducers.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/consts/cartConsts.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Cart/index.js",["176","177","178"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../../components/Message\";\nimport { addToCart, removeFromCart } from \"../../redux/actions/cartActions\";\n\nconst Cart = ({ match, history, location }) => {\n  const productId = match.params.id;\n\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\");\n  };\n  return (\n    <section id=\"cart_items\">\n      <div class=\"container\">\n        <h2 className=\"title text-center\" style={{ fontSize: \"40px\" }}>\n          Your cart\n        </h2>\n        {cartItems.length === 0 ? (\n          <Message variant=\"aler alert-danger\">\n            <h4\n              style={{\n                padding: \"20px 15px\",\n                borderRadius: \"50px\",\n                margin: \"50px 0\",\n              }}\n            >\n              Your cart is empty. <Link to=\"/\">Go Back?</Link>\n            </h4>\n          </Message>\n        ) : (\n          <>\n            <div class=\"table-responsive cart_info\">\n              <table class=\"table table-condensed\">\n                <thead>\n                  <tr class=\"cart_menu\">\n                    <td class=\"image\">Item</td>\n                    <td class=\"description\"></td>\n                    <td class=\"price\">Price</td>\n                    <td class=\"quantity\">Quantity</td>\n                    <td class=\"total\">Total</td>\n                    <td></td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {cartItems.map((item) => (\n                    <tr key={item.product}>\n                      <td class=\"cart_product\">\n                        <a href=\"\">\n                          <img\n                            src={item.image}\n                            alt={item.alt}\n                            style={{ width: \"50px\", height: \"50px\" }}\n                          />\n                        </a>\n                      </td>\n                      <td class=\"cart_description\">\n                        <h4>\n                          <Link to={`/products/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </h4>\n                        <p>Web ID: {item._id}</p>\n                      </td>\n                      <td class=\"cart_price\">\n                        <p>${item.price}</p>\n                      </td>\n                      <td class=\"cart_quantity\">\n                        <select\n                          style={{ width: \"50%\" }}\n                          value={item.qty}\n                          onChange={(e) =>\n                            dispatch(\n                              addToCart(item.product, Number(e.target.value))\n                            )\n                          }\n                        >\n                          {[...Array(item.countInStock).keys()].map((x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          ))}\n                        </select>\n                      </td>\n                      <td class=\"cart_total\">\n                        <p class=\"cart_total_price\">${item.price * item.qty}</p>\n                      </td>\n                      <td class=\"cart_delete\">\n                        <a\n                          class=\"cart_quantity_delete\"\n                          onClick={() => removeFromCartHandler(item.product)}\n                        >\n                          <i class=\"fa fa-times\"></i>\n                        </a>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div class=\"col-sm-12\" style={{ padding: \"0\" }}>\n              <div class=\"total_area\">\n                <ul style={{ padding: \"0\" }}>\n                  <li>\n                    Cart Sub Total{\" \"}\n                    <span>\n                      {\" \"}\n                      $\n                      {cartItems\n                        .reduce((acc, item) => acc + item.qty * item.price, 0)\n                        .toFixed(2)}\n                    </span>\n                  </li>\n                </ul>\n\n                <a\n                  class=\"btn btn-default check_out\"\n                  style={{ margin: \"20px 0\" }}\n                  onClick={checkoutHandler}\n                >\n                  Check Out\n                </a>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Cart;\n","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/actions/cartActions.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/reducers/orderReducers.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/consts/orderConsts.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Shipping/index.js",["179"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { saveShippingAddress } from \"../../redux/actions/cartActions\";\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\n\nconst Shipping = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  console.log(shippingAddress);\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push(\"/payment\");\n  };\n  return (\n    <>\n      {/** \n      <div classNameName=\"shopper-info container mb-5\">\n        <CheckoutSteps step1 step2 />\n        <div classNameName=\"row\">\n          <div classNameName=\"col-sm-12 clearfix \">\n            <div classNameName=\"bill-to w-50 mx-auto\">\n              <p>Bill To</p>\n              <div classNameName=\"form-one\">\n                <form onSubmit={submitHandler}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Address *\"\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"City *\"\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Country *\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Zip / Postal Code *\"\n                    value={postalCode}\n                    onChange={(e) => setPostalCode(e.target.value)}\n                  />\n\n                  <button classNameName=\"btn btn-primary\">Continue</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      */}\n      <div className=\"container\">\n        <form className=\"form-horizontal\" onSubmit={submitHandler}>\n          <h2 className=\"title text-center\" style={{ fontSize: \"30px\" }}>\n            Bill to\n          </h2>\n          <div className=\"form-group \">\n            <label className=\"control-label col-sm-2\" for=\"address\">\n              Address:\n            </label>\n            <div className=\"col-sm-7\">\n              <input\n                type=\"text\"\n                id=\"address\"\n                placeholder=\"Address *\"\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"form-group \">\n            <label className=\"control-label col-sm-2\" for=\"city\">\n              City:\n            </label>\n            <div className=\"col-sm-7\">\n              <input\n                type=\"text\"\n                id=\"city\"\n                placeholder=\"City *\"\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"form-group \">\n            <label className=\"control-label col-sm-2\" for=\"country\">\n              Country:\n            </label>\n            <div className=\"col-sm-7\">\n              <input\n                type=\"text\"\n                id=\"country\"\n                placeholder=\"Country *\"\n                value={country}\n                onChange={(e) => setCountry(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"form-group \">\n            <label className=\"control-label col-sm-2\" for=\"postalcode\">\n              Zip / Postal Code:\n            </label>\n            <div className=\"col-sm-7\">\n              <input\n                type=\"text\"\n                id=\"postalcode\"\n                placeholder=\"Zip / Postal Code *\"\n                value={postalCode}\n                onChange={(e) => setPostalCode(e.target.value)}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <div className=\"col-sm-offset-2 col-sm-10\">\n              <button className=\"btn btn-primary\">Submit</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Shipping;\n","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/CheckoutSteps/index.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Payment/index.js",["180"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { savePaymentMethod } from \"./../../redux/actions/cartActions\";\nimport CheckoutSteps from \"./../../components/CheckoutSteps\";\n\nconst Payment = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <>\n      {/**<div className=\"shopper-info container mb-5\">\n        <CheckoutSteps step1 step2 step3 />\n        <div className=\"row\">\n          <div className=\"col-sm-12 clearfix mx-auto\">\n            <div className=\"bill-to\">\n              <p>Payment</p>\n              <div className=\"form-one\">\n                <h6>Payment Method</h6>\n\n                <form onSubmit={submitHandler}>\n                  <label for=\"paypal\">Paypal</label>\n\n                  <input\n                    type=\"radio\"\n                    id=\"paypal\"\n                    name=\"paypal\"\n                    value=\"PayPal\"\n                    onChange={(e) => setPaymentMethod(e.target.value)}\n                    checked\n                  />\n                  <button className=\"btn btn-primary\">Continue</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n  </div>*/}\n      <div className=\"container\">\n        <form className=\"form-horizontal\" onSubmit={submitHandler}>\n          <h2 className=\"title text-center\" style={{ fontSize: \"40px\" }}>\n            Payment\n          </h2>\n          <div\n            style={{\n              padding: \"20px\",\n              width: \"40%\",\n              margin: \"10px auto\",\n              border: \"2px solid #ccc\",\n            }}\n          >\n            <h3 style={{ margin: \"0\" }}>Choose payment method</h3>\n\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  id=\"paypal\"\n                  name=\"paypal\"\n                  value=\"PayPal\"\n                  onChange={(e) => setPaymentMethod(e.target.value)}\n                  checked\n                />\n                Paypal\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <div className=\"col-sm-10\">\n                <button className=\"btn btn-primary\">Submit</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Payment;\n","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/PlaceOrder/index.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/redux/actions/orderActions.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/Order/index.js",["181"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Card,\n  Button,\n  Container,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"./../../redux/actions/orderActions\";\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from \"./../../redux/consts/orderConsts\";\nimport Message from \"./../../components/Message\";\nimport Loader from \"react-loader-spinner\";\n\nconst Order = ({ history, match }) => {\n  const orderId = match.params.id;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, successDeliver, order]);\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <Container>\n        <h1 className=\"title\">Order {order._id}</h1>\n        <Row>\n          <Col md={8}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Shipping</h2>\n                <p>\n                  <strong>Name: </strong> {order.user.name}\n                </p>\n                <p>\n                  <strong>Email: </strong>{\" \"}\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                </p>\n                <p>\n                  <strong>Address:</strong>\n                  {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\n                  {order.shippingAddress.postalCode},{\" \"}\n                  {order.shippingAddress.country}\n                </p>\n                {order.isDelivered ? (\n                  <Message variant=\"success\">\n                    Delivered on {order.deliveredAt}\n                  </Message>\n                ) : (\n                  <Message variant=\"danger\">Not Delivered</Message>\n                )}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <h2>Payment Method</h2>\n                <p>\n                  <strong>Method: </strong>\n                  {order.paymentMethod}\n                </p>\n                {order.isPaid ? (\n                  <Message variant=\"success\">Paid on {order.paidAt}</Message>\n                ) : (\n                  <Message variant=\"danger\">Not Paid</Message>\n                )}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <h2>Order Items</h2>\n                {order.orderItems.length === 0 ? (\n                  <Message>Order is empty</Message>\n                ) : (\n                  <ListGroup variant=\"flush\">\n                    {order.orderItems.map((item, index) => (\n                      <ListGroup.Item key={index}>\n                        <Row>\n                          <Col md={1}>\n                            <Image\n                              src={item.image}\n                              alt={item.name}\n                              fluid\n                              rounded\n                            />\n                          </Col>\n                          <Col>\n                            <Link to={`/product/${item.product}`}>\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <Col md={4}>\n                            {item.qty} x ${item.price} = $\n                            {item.qty * item.price}\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                )}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={4}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Order Summary</h2>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>${order.itemsPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Shipping</Col>\n                    <Col>${order.shippingPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>${order.taxPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Total</Col>\n                    <Col>${order.totalPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                {!order.isPaid && (\n                  <ListGroup.Item>\n                    {loadingPay && (\n                      <Loader\n                        type=\"Puff\"\n                        color=\"#00BFFF\"\n                        height={100}\n                        width={100}\n                        timeout={3000} //3 secs\n                      />\n                    )}\n                    {!sdkReady ? (\n                      <Loader\n                        type=\"Puff\"\n                        color=\"#00BFFF\"\n                        height={100}\n                        width={100}\n                        timeout={3000} //3 secs\n                      />\n                    ) : (\n                      <PayPalButton\n                        amount={order.totalPrice}\n                        onSuccess={successPaymentHandler}\n                      />\n                    )}\n                  </ListGroup.Item>\n                )}\n                {loadingDeliver && (\n                  <Loader\n                    type=\"Puff\"\n                    color=\"#00BFFF\"\n                    height={100}\n                    width={100}\n                    timeout={3000} //3 secs\n                  />\n                )}\n                {userInfo &&\n                  userInfo.isAdmin &&\n                  order.isPaid &&\n                  !order.isDelivered && (\n                    <ListGroup.Item>\n                      <Button\n                        type=\"button\"\n                        className=\"btn btn-block\"\n                        onClick={deliverHandler}\n                      >\n                        Mark As Delivered\n                      </Button>\n                    </ListGroup.Item>\n                  )}\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Order;\n","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/components/Slider/index.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/UserList/index.js",["182"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listUsers, deleteUser } from \"./../../redux/actions/userActions\";\nimport Loader from \"react-loader-spinner\";\nimport Message from \"./../../components/Message\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\n\nconst UsersList = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure\")) {\n      dispatch(deleteUser(id));\n    }\n  };\n  return (\n    <>\n      <h2 className=\"title text-center\" style={{ fontSize: \"30px\" }}>\n        Users\n      </h2>\n      <div className=\"container\">\n        <div className=\"row\">\n          {loading ? (\n            <Loader\n              type=\"Puff\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n              timeout={3000} //3 secs\n            />\n          ) : error ? (\n            <Message variant=\"alert alert-danger\">{error}</Message>\n          ) : (\n            <table className=\"table table-striped table-dark\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">id</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Email</th>\n                  <th scope=\"col\">Admin</th>\n                  <th scope=\"col\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {users.map((user) => (\n                  <tr key={user._id}>\n                    <td>{user._id}</td>\n                    <td>{user.name}</td>\n                    <td>\n                      <a href={`mailto:${user.email}`}>{user.email}</a>\n                    </td>\n                    <td>\n                      {user.isAdmin ? (\n                        <i\n                          className=\"fa fa-check\"\n                          style={{ color: \"green\" }}\n                        ></i>\n                      ) : (\n                        <i className=\"fa fa-times\" style={{ color: \"red\" }}></i>\n                      )}\n                    </td>\n                    <td>\n                      <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                        <Button variant=\"light\" className=\"btn-sm\">\n                          <i className=\"fa fa-edit\"></i>\n                        </Button>\n                      </LinkContainer>\n                      <Button\n                        variant=\"danger\"\n                        className=\"btn-sm\"\n                        onClick={() => deleteHandler(user._id)}\n                      >\n                        <i className=\"fa fa-trash\"></i>\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UsersList;\n","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/UserEdit/index.js",["183","184"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport Message from \"./../../components/Message\";\nimport { getUserDetails, updateUser } from \"./../../redux/actions/userActions\";\nimport { USER_UPDATE_RESET } from \"./../../redux/consts/userConsts\";\n\nconst UserEdit = ({ history, match }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n  return (\n    <section id=\"form\" style={{ backgroundColor: \"#f4f4f4\", margin: \"40px 0\" }}>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div\n            className=\"col-sm-6\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              height: \"500px\",\n            }}\n          >\n            <div className=\"login-form\" style={{ height: \"50%\", width: \"80%\" }}>\n              <h2>Edit User</h2>\n              {error && <Message variant=\"alert alert-danger\">{error}</Message>}\n              {loading && (\n                <Loader\n                  type=\"Puff\"\n                  color=\"#00BFFF\"\n                  height={100}\n                  width={100}\n                  timeout={3000} //3 secs\n                />\n              )}\n              <form onSubmit={submitHandler}>\n                <input\n                  type=\"name\"\n                  placeholder=\"Name\"\n                  onChange={(e) => setName(e.target.value)}\n                  value={name}\n                />\n                <input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                />\n                <input\n                  type=\"checkbox\"\n                  id=\"admin\"\n                  name=\"admin\"\n                  onChange={(e) => setIsAdmin(e.target.checked)}\n                />\n                <label for=\"admin\">admin</label>\n\n                <button type=\"submit\" className=\"btn btn-default\">\n                  Update\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default UserEdit;\n","/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/ProductList/index.js",[],"/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/M-Store/client/src/pages/ProductEdit/index.js",["185","186"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport Message from \"./../../components/Message\";\nimport { PRODUCT_UPDATE_RESET } from \"../../redux/consts/productConsts\";\nimport {\n  getProductDetails,\n  updateProduct,\n} from \"./../../redux/actions/productActions\";\n\nconst ProductEdit = ({ match, history }) => {\n  const productId = match.params.id;\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [brand, setBrand] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const productDetails = useSelector((state) => state.productDetails);\n\n  const { product, error, loading } = productDetails;\n\n  console.log(product);\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(getProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate]);\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\"/api/upload\", formData, config);\n\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <div className=\"container\">\n        <h1>Edit Product</h1>\n        {loadingUpdate && (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        )}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter countInStock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ProductEdit;\n",{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"187","replacedBy":"191"},{"ruleId":"189","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":98,"column":21,"nodeType":"195","endLine":98,"endColumn":33},{"ruleId":"196","severity":1,"message":"197","line":14,"column":15,"nodeType":"195","endLine":14,"endColumn":64},{"ruleId":"198","severity":1,"message":"199","line":11,"column":25,"nodeType":"200","messageId":"201","endLine":11,"endColumn":28},{"ruleId":"202","severity":1,"message":"203","line":19,"column":6,"nodeType":"204","endLine":19,"endColumn":23,"suggestions":"205"},{"ruleId":"193","severity":1,"message":"194","line":80,"column":17,"nodeType":"195","endLine":80,"endColumn":28},{"ruleId":"193","severity":1,"message":"194","line":66,"column":25,"nodeType":"195","endLine":66,"endColumn":36},{"ruleId":"193","severity":1,"message":"206","line":106,"column":25,"nodeType":"195","endLine":109,"endColumn":26},{"ruleId":"193","severity":1,"message":"206","line":133,"column":17,"nodeType":"195","endLine":137,"endColumn":18},{"ruleId":"198","severity":1,"message":"207","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":21},{"ruleId":"198","severity":1,"message":"207","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":21},{"ruleId":"202","severity":1,"message":"208","line":85,"column":6,"nodeType":"204","endLine":85,"endColumn":60,"suggestions":"209"},{"ruleId":"198","severity":1,"message":"210","line":7,"column":10,"nodeType":"200","messageId":"201","endLine":7,"endColumn":15},{"ruleId":"198","severity":1,"message":"211","line":22,"column":14,"nodeType":"200","messageId":"201","endLine":22,"endColumn":27},{"ruleId":"198","severity":1,"message":"212","line":23,"column":12,"nodeType":"200","messageId":"201","endLine":23,"endColumn":23},{"ruleId":"198","severity":1,"message":"213","line":26,"column":10,"nodeType":"200","messageId":"201","endLine":26,"endColumn":19},{"ruleId":"198","severity":1,"message":"214","line":60,"column":9,"nodeType":"200","messageId":"201","endLine":60,"endColumn":26},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],["215"],["216"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product._id'. Either include it or remove the dependency array.","ArrayExpression",["217"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'CheckoutSteps' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["218"],"'Table' is defined but never used.","'loadingUpdate' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","'uploading' is assigned a value but never used.","'uploadFileHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [dispatch, match, product._id]",{"range":"223","text":"224"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, order, userInfo, history]",{"range":"225","text":"226"},[666,683],"[dispatch, match, product._id]",[2393,2447],"[dispatch, orderId, successPay, successDeliver, order, userInfo, history]"]